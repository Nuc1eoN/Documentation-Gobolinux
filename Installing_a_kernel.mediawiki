{{ToC}}

Thanks to Compile, installing a new kernel is pretty straightforward on [[GoboLinux]]. The Linux recipe takes into account the existence of a file called config.gz inside /System/Kernel/Status. This file contains the current configuration for the running kernel, and is used thereby to feed the new kernel options.

In short, running '''Compile Linux''' will fetch the latest available recipe (which already contains [[GoboLinux]] optional patches). After doing that, the kernel itself is automatically downloaded, patched and filled with the current configuration, taken from config.gz.

The menuconfig entry then appears, and allows for the user to modify their kernel options. Just selecting "Exit" and telling the script to save the changes will finish the user's interaction with the Linux kernel compilation. After completed, a new entry will appear under /System/Kernel/Modules/$KERNEL_RELEASE, and the new bzImage and System.map files will get installed under /System/Kernel/Boot.

The old bzImage and System.map files aren't overwritten, though. They're just symlinks to the current kernel image, and this guarantees that if something goes wrong, a rollback can be done by simply modifying the kernel image at the GRUB's bootloader prompt, and later by reverting the symlink's target to the previous release.


For a list of available kernels, see this link:

[http://www.gobolinux.org/?page=doc/articles/gobohide Kernel Listing]

To install a kernel which is newer than the available recipe, or one other than vanilla, you may use NewVersion.
* Download a kernel from [http://www.kernel.org/ kernel.org]
:: If you already have a kernel downloaded, or have a special source package, you may place it in /Files/Compile/Archives.
* Use NewVersion Linux <Version> <nowiki>http://kernel.org/pub/linux/kernel/v2.6/<your-archive-name></nowiki> to create a recipe.  Using a fake URL is all right if you don't intend to distribute the recipe.  
* Place any custom patches you need to apply into the /Files/Compile/LocalRecipes/Linux/<Version> directory.
* Then Compile as usual.

{{Handbook}}