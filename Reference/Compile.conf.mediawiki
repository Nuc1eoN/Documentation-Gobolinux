Compile.conf is the file where you can configure the various paths and URLs used by [[Compile]].

It is stored at /Programs/Compile/Settings/Compile/Compile.conf -- which, once installed, has a link at /System/Settings/Compile/Compile.conf (if you're used to the [[GoboLinux]] tree, you should know by now that this is the same as /etc/Compile/Compile.conf).

These are the usual contents of the file:

Your name here so that credit is added to recipes.

    compileRecipeAuthor="Paul McCartney" 
    # example only! change the name (unless of course, you're Paul ;) ) 


The standard locations for your local Compile files.

    compileDir="${goboPrefix}/Files/Compile" 
    compileDependenciesDir="$compileDir/Recipes" 
    compileArchivesDir="$compileDir/Archives" 
    compileSourcesDir="$compileDir/Sources" 


You can have a series of local directories to search for unpacked recipes (ie, directories containing recipe subdirectories):

    compileRecipeDirs=( 
    "$compileDir/LocalRecipes" 
    "$compileDir/Recipes" 
    ) 

Please note that if you comment the "$compileDir/LocalRecipes" line, then you can ignore local recipes.


This is where the remote recipes are fetched.

    getRecipeStores=( 
    "http://gobolinux.org/recipe-store" 
    "http://gobo.calica.com/recipe-store" 
    ) 


The following variable indicates where [[GetRecipe]] places its recipes. Ideally, it should match $compileRecipeDirs:

    compileGetRecipeDir="$compileDir/Recipes" 


These specify the source and destination to [[PackRecipe]]:

    compileLocalRecipesDir="$compileDir/LocalRecipes" 
    compilePackedRecipesDir="$compileDir/PackedRecipes" 


Some of the main free software repositories are treated especially: recipes use these variables in their <code>url</code> declarations, so that you can pick your favorite mirror without having to edit recipes one by one:

    ftpGnu=ftp://ftp.gnu.org/gnu/ 
    ftpAlphaGnu=ftp://alpha.gnu.org/gnu/ 
    httpSourceforge=http://unc.dl.sourceforge.net/sourceforge/ 


A variable to set the "make" command called by Compile. ColorMake provides the highlighting that GoboLinux has by default:

    compileMakeCommand="ColorMake" 


Options to use with the make command. This can be used to run multiple threads in parallel on different CPUs or for other customisation:

    compileMakeOptions="-j2" 


{{Reference}}
