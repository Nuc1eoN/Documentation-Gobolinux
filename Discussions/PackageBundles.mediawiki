=  PackageBundles =

The goal of this project is to allow users to install/remove groups of packages easily.  Please keep discussion on the gobolinux-users list.  This page is to record the results of the discussion of that list.

==  Usage Criteria ==

This section presents the basic requirements.  Specific users types are: enduser/admin, bundle maintainer, store mirrorer.

===  End-user/Admin ===

# '''Be easy to browse.'''  Increasing numbers of packages overwhelm users.  Bundles will be in a separate store from normal packages, like official/contrib.  ''please expand this.''

# '''Be easy to locate/remove.'''  A simple dependency based system is still difficult to remove.  In true Gobo fashion, "rm -rf" should be enough.

# '''Allow existing installs of apps''', potentially even identical versions, to remain intact and separate when a meta-package containing that program is installed.

===  Bundle maintainer ===

# May not be recipe maintainer

===  Store mirrorer ===

# Minimize disk/bandwidth usage

==  Implementation Details ==

===  Filesystem Structure ===

* Bundles will reside in /Programs.
* Child packages will be installed in Bundle directory. ie /Programs/KDE/3.4.0/KDE-Libs/3.4.0/
* Child packages will have a symlink (version) from /Programs to the Bundle directory. ie /Programs/KDE-Libs/3.4.0 -->  /Programs/KDE/3.4.0/KDE-Libs/3.4.0

===  Package format ===

* Bundles contain Resources/Bundle file specifying child packages and doc/. (what other metadata?)
* "lean" and "fat" bundles (better terms??)
* "lean" bundles contain Resources/Bundle and doc/
* "fat" bundles include child packages extracted in $prefix

===  Existing Infrastructure ===

* use $goboInstall to handle symlink from /Programs to Bundle
* [[InstallPackage]] check for Resource/Bundle
* [[CreatePackage]] default "lean" bundle.  Switch to create "fat" bundle.

===  Compile ===

# Not at all.  Bundles are maintained outside of Compile's recipe store.  As a bundles is only a Resources and a doc dir this isn't too bad.  A tool to pull from CVS and create tarballs is simple.
# Use Compile just to extract the "lean" bundle from the recipe.
# Use Compile to build/install a bundle from sources.
# A combination of 1 and 3.
# Some other combination of above.

{{Discussions}}