This page describes the boot process and how to configure your GoboLinux system by editing the configuration files used for startup.

== General architecture ==

The [[BootDriver]] script (<code>/Programs/BootScript/<version>/bin/BootDriver</code>) manages boot-related tasks. The <code>init</code> program (from the Sysvinit package) running as <code>PID 1</code> calls BootDriver as specified in <code>/System/Settings/inittab</code>.

[[BootDriver]] first loads the [[Boot Themes|boot theme file]] specified in <code>/System/Settings/BootOptions</code>. Then BootDriver runs the appropriate boot script for the task at hand (startup, shutdown, etc.)

== Boot Scripts ==

GoboLinux boot scripts initialize and configure the system, manage daemons, and perform shutdown.  They are located at <code>/System/Settings/BootScripts</code>.

* '''BootUp''', the primary startup script, is invoked when you turn on the power and the system boots. It contains generic initializations common to most Linux systems. Additional scripts are provided to support particular boot scenarios. 
** '''Console''' runs BootUp and performs initializations required for a console session.
** '''Graphic''' runs BootUp and starts X to provide a login window. 
* '''Shutdown''' is the primary shutdown script, analogous to BootUp. It is used by the following termination scripts:
** '''Reboot''' runs Shutdown to terminate system services then reboots the machine.
** '''Halt''' runs Shutdown and turns off the power, if possible. Otherwise it halts the processor.

Each of these scripts contains lines of the form:

    Exec "Message..." SomeCommand [ parameters ]

For example, to adjust the keyboard delay and repeat rate in
the console, you can add this line to <code>/System/Settings/BootScripts/Console</code>:

    Exec "Making keyboard speedy..." kbdrate -r 30 -d 250

GoboLinux also provides [[Boot script tasks|"boot tasks"]] as a more sophisticated way of managing services.

== Configuration options ==

When GoboLinux boots, the boot scripts launch programs to configure the keyboard, set the system clock, initialize the network, etc. 

The parameters for calling these programs are placed in <code>/System/Settings/BootOptions</code>
and <code>/System/Settings/NetworkOptions</code>. Both files contain entries of the form:

    Option=value 

Note that no space is allowed before or after the <code>=</code> character. This is shell
syntax, allowing the options to be imported into the boot scripts using the
<code>source</code> command.

The following sections document options available in
<code>/System/Settings/BootOptions</code> and
<code>/System/Settings/NetworkOptions</code>.

=== Clock mode ===

GoboLinux needs to know if your hardware clock is set to GMT or local time.
Specify this by editing the ClockMode option. Set <code>ClockMode=GMT</code> if your hardware
clock is set to GMT. Set <code>ClockMode=LocalTime</code> if your hardware clock is set to local
time.

For obtaining time zone information, Linux applications rely
on information provided by Glibc, the C library. Glibc, on
its turn, uses the <code>localtime</code> symlink in its Settings
directory (<code>/Programs/Glibc/Settings/localtime</code>) to
indicate the active time zone. This symlink is created by
the installer according to the time zone you selected. You
can set this setting manually, by pointing the <code>localtime</code>
symlink to a different file under <code>/Programs/Glibc/Current/Shared/zoneinfo</code>.

The ClockMode information is used for the hwclock utility, which is launched at boot time through the SetClock task.

=== Console setup ===

==== Fonts ====

Fonts in GoboLinux are stored under
<code>/System/Index/share/consolefonts</code> and
<code>/System/Index/share/fonts</code>.  They provide character
typefaces for the Linux console, the X Window System, and
<code>ghostscript</code>, the Linux postscript interpreter.

Font path configuration for X can be found in
<code>/System/Settings/X11/xorg.conf</code> and
<code>/System/Settings/fonts/fonts.conf</code>.

To change the default console font used by GoboLinux, use
the ConsoleFont option in <code>/System/Settings/BootOptions</code>.

You can also change the console font using the <code>setfont</code> utility.
See <code>man setfont</code> for details.

Remember that this setting changes  only the console font. On X, applications
have their own font settings. 

==== Keymap ====

Use the KeymapLayout option in
<code>/System/Settings/BootOptions</code> to select an appropriate
console keyboard layout.

The available keymaps are in the KBD package; they are the .map files. You can set the console keyboard layout at any time by running loadkeys. For example, to set the Dvorak keymap, just type in:
 loadkeys dvorak.map

==== Mouse ====

The MouseType and MouseDevice options in
<code>/System/Settings/BootScripts/BootUp</code> configure mouse
support on the console. They are disabled by default.

=== Graphical display setup (X server) ===

==== Keymap ====

The keyboard layout for programs running under the window
manager is mapped according the <code>InputDevice</code> section in
<code>/System/Settings/xorg.conf</code> when the graphic display (X
server) starts. With the window manager running, you can
change keyboard mappings and display settings using
<code>setxkbmap</code>, <code>xmodmap</code>, and <code>xset</code> tools. To select a Dvorak
keyboard layout, type <code>setxkbmap dvorak</code> in a terminal.
These commands can also be placed in <code>$HOME/.xinitrc</code>.

Some desktop environments also offer graphical tools for setting the keyboard layout. For example, in KDE you can configure this at the KDE Control Center.

==== Mouse ====

The mouse pointer for the graphical display is defined in an
<code>InputDevice</code> section in <code>/System/Settings/xorg.conf</code>. The [[Installer]] should correctly detect your hardware and set suitable defaults for your system. If not, you can always try a failsafe setup such as:


    Section "InputDevice" 
    Identifier  "Mouse0" 
    Driver      "mouse" 
    Option      "Protocol" "auto" 
    Option      "Device" "/dev/input/mice" 
    Option      "ZAxisMapping" "4 5" 
    EndSection 


There is nothing GoboLinux-specific about mouse setup on X. You can find HOWTOs and tutorials around the net that can give you more detailed instructions about this. (But feel free to drop by at the mailing list if you're still stuck!)

=== Kernel modules ===

Through the use of Udev, GoboLinux is capable of loading kernel modules
(e.g. device drivers) automatically at boot. In cases Udev doesn't load some
wanted drivers, the user can explicitly request them.

One way is to edit <code>/System/Settings/modprobe.conf</code>
(similar to other Linux distributions), however a simpler
way in GoboLinux is to list desired modules in
<code>/System/Settings/BootOptions</code>. This is how to load the
i810_audio audio driver and sk98lin ethernet driver:

    UserDefinedModules=( 
        "i810_audio" 
        "sk98lin" 
    ) 

The startup scripts read this array and run modprobe each line.  The entries
may include additional parameters.


=== Network configuration ===

==== Wi-Fi ====

If you are using Wi-Fi, just select your network using the [http://github.com/gobolinux/GoboNet GoboNet] widget in the AwesomeWM system tray:

https://gobolinux.org/images/gobo016gobonet.png

==== Wired network ====

If you have a wired network, initialize it on boot using standard Linux commands in your bootscripts sequence.

First, check which are your network interfaces typing

    ifconfig 

You should have a network interface named something like <code>eth0</code> or <code>enp0s3</code>.

Edit the <code>/System/Settings/BootScripts/BootUp</code> script. If you are using DHCP, just add this:

    dhcpcd eth0 & 


If you have a static network configuration, place commands similar to the following
in BootUp.


    ifconfig eth0 192.168.1.5 netmask 255.255.255.0 
    route add default gateway 192.168.1.1 metric 1 dev eth0 


The nameserver can be specified in <code>/etc/resolv.conf</code>
(<code>/System/Settings/resolv.conf</code>). To use Google's nameservers, you can edit
resolv.conf to:

    nameserver 8.8.8.8 
    nameserver 8.8.4.4 


=== Automated login ===

If you wish to use an automated login, there are several ways to achieve this goal.

For KDE (or KDM, it also has a configuration which allows you to tweak it a lot) you can use this:

# Open Control Center in administrative mode.
# Select Login Manager.
# Under the Convenience tab check "Enable auto-login" and select which_user you should log in as.
# Click "Apply".

If you do not use KDE or want a non-GUI based solution, one way is to use rungetty.


# In your inittab file (for example, <code>nano /etc/inittab</code>) find the line which includes <code>tty1</code> (it's your first terminal, the default showing up on login). 
# Now, you will see <code>agetty</code> in there - change this <code>agetty</code> line to <code>rungetty tty1 --autologin your_username</code>.

Of course, replace your_username with the user you want to login as.

Using another tty than 1 may be useful too. 


== Printers ==

GoboLinux comes with CUPS installed by default.

== Audio ==

Note that ALSA is muted by default, to automatically save and restore changes done in e.g. alsamixer, add these lines to your boot scripts.

        Done: Exec "Storing ALSA settings..."
        alsactl store



__NOTOC__
